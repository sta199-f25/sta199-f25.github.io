{
  "hash": "8e591aa1b4df60b00418fe9b5459212c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Exam 1 review\nsubtitle: Suggested answers\nexecute:\n  echo: false\n---\n\n1.  b, c, f, g -\n\n    -   The `blizzard_salary` dataset has 409 rows.\n\n    -   The `percent_incr` variable is numerical and continuous.\n\n    -   The `salary_type` variable is categorical.\n\n2.  Figure 1 - A shared x-axis makes it easier to compare summary statistics for the variable on the x-axis.\n\n3.  c - It's a value higher than the median for hourly but lower than the mean for salaried.\n\n4.  b - There is more variability around the mean compared to the hourly distribution.\n\n5.  a, b, e - Pie charts and waffle charts are for visualizing distributions of categorical data only.\n    Scatterplots are for visualizing the relationship between two numerical variables.\n\n6.  c - `mutate()` is used to create or modify a variable.\n\n7.  a - `\"Poor\", \"Successful\", \"High\", \"Top\"`\n\n8.  b - Option 2.\n    The plot in Option 1 shows the number of employees with a given performance rating for each salary type while the plot in Option 2 gives the proportion of employees with a given performance rating for each salary type.\n    In order to assess the relationship between these variables (e.g., how much more likely is a Top rating among Salaried vs. Hourly workers), we need the proportions, not the counts.\n\n9.  There may be some `NA`s in these two variables that are not visible in the plot.\n\n10. The proportions under Hourly would go in the Hourly bar, and those under Salaried would go in the Salaried bar.\n\n11. c - `filter(salary_type != \"Hourly\" & performance_rating == \"Poor\")` - There are 5 observations for **\"not Hourly\"** **\"and\"** Poor.\n\n12. a - `arrange()` - The result is arranged in increasing order of `annual_salary`, which is the default for `arrange()`.\n\n13. c, d, e, f.\n\n14. Part 1: The following should be fixed:\n\n    -   There should be a `|` after `#` before `label`\n\n    -   There should be a `:` after label, not `=`\n\n    -   There shouldn't be a space in the chunk label, it should be `plot-blizzard`\n\n    -   There should be spaces after commas in the code\n\n    -   There should be spaces on both sides of `=` in the code\n\n    -   There should be a space before `+`\n\n    -   `geom_boxplot()` should be on the next line and indented\n\n    -   There should be a `+` at the end of the `geom_boxplot()` line\n\n    -   `labs()` should be indented\n\n    Part 2: The warning is caused by `NA` in the data.\n    It means that 39 observations were `NA`s and are not plotted/represented on the plot.\n\n15. Part 1:\n\n    1.  Render: Run all of the code and render all of the text in the document and produce an output.\n    2.  Commit: Take a snapshot of your changes in Git with an appropriate message.\n    3.  Push: Send your changes off to GitHub.\n\n    Part 2: c - Rendering or committing isn't sufficient to send your changes to your GitHub repository, a push is needed.\n    A pull is also not needed to view the changes in the browser.\n\n16.  d\n\n17.  a, d\n\n18.  a, d\n\n19.  c\n\n20.  b\n\n21.  a\n\n22.  b\n\n23.  \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](exam-1-review-A_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n24.  a, d\n\n25. b, c, e\n\n26. a\n\n27. a, c, e\n\n28. a, b, c, d\n\n29. a, d\n",
    "supporting": [
      "exam-1-review-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}