{
  "hash": "a44f9cd5f340b9eac9afb6ba0a318429",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hello, World!\"\nsubtitle: \"Lecture 1\"\ndate: \"2025-08-26\"\nformat: \n  revealjs: \n    output-file: 01-hello-world-slides.html\n    footer: \"[ðŸ”— sta199-f25.github.io](https://sta199-f25.github.io/)\"\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    logo: \"images/logo.png\" \n    toc: false\n  html: \n    code-link: true\n---\n\n\n\n# Hello world!\n\n## Meet the prof {.smaller}\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Dr. Mine Ã‡etinkaya-Rundel**\n\nProfessor of the Practice\n\nDirector of Undergraduate Studies, Statistical Science\n\nDirector of First-Year Experience in Trinity College of Arts & Sciences\n\n**Office:** Old Chem 211C\n:::\n::: {.column width=\"50%\"}\n**Office hours:**\n\n- 1-1:30 pm T Th (after class, here or outside the classroom)\n- 12:45-2:15 pm F (Old Chem 211C)\n- By appointment\n:::\n::: \n\n## Meet the course team {.smaller}\n\n::::: columns\n::: {.column width=\"50%\"}\n- **Mary Knox (Course coordinator)**\n- Marie\tNeubrander (Head TA)\n- **Abuzar\tKhudaverdiyeva**\n- **Alexa\tFahrer**\n- Allison\tYang\n- Arijit\tDey\n- Benjamin\tSherman\n- Bethany\tAkinola\n- Eduardo\tVasquez\n- Federico\tArboleda\n:::\n\n::: {.column width=\"50%\"}\n- Jessie\tRingness\n- Kathleen\tZhang\n- Katie\tSolarz\n- Luxman\tMaheswaran\n- Max\tNiu\n- Natasha\tHarris\n- Sarah\tWu\n- Xueyan\tHu\n- Ziyan\tWang\n:::\n:::::\n\n## Meet each other!\n\n::: question\nPlease share with at least two classmates...\n\n-   Your name\n-   Your year\n-   Where you're from\n-   What you did this past summer\n-   What you hope to get out of this course\n:::\n\n::: {.content-visible when-format=\"revealjs\"}\n{{< countdown minutes=4 font-size=\"5rem\" >}}\n:::\n\n## Meet data science\n\n::: incremental\n-   **Data science** is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge.\n\n-   We're going to learn to do this in a modern and `tidy` way -- more on that later!\n\n-   This is a course on introduction to data science, with an emphasis on **statistical thinking**.\n:::\n\n## Let's do some data science! {.smaller}\n\n::: {.columns}\n::: {.column}\n-   Yesterday we collected some data from you!\n\n-   Today we're going to explore that data together, following the data science cycle.\n:::\n::: {.column}\n![](images/01/data-science-cycle.png){fig-alt=\"Data science cycle: Import, tidy, transform, visualize, model, communicate.\" fig-align=\"center\"}\n:::\n:::\n\n. . .\n\n::: callout-warning\nThe data is anonymized and randomized and contains only a subset of the data collected. The rows have been shuffled for each column independently, meaning that no row belongs to a single student in the course. Additionally, any identifying information has been removed. Please do not try to de-anonymize or re-identify any individuals in the dataset.\n:::\n\n\n## Beginning the data science cycle {.smaller}\n\n::: {.columns}\n::: {.column width=\"50%\" .fragment}\nYou took a survey:\n\n![](images/01/canvas-survey.png){fig-alt=\"Screenshot of Getting to know you survey on Canvas.\" fig-align=\"center\" fig-width=\"200\"}\n:::\n::: {.column width=\"25%\" .fragment}\nCanvas stored your data in a CSV (comma-separated values) file:\n\n{{< fa file-csv size=8x title=\"CSV file icon\" >}}\n:::\n::: {.column width=\"25%\" .fragment}\nWe want to explore the data that is in that file!\n:::\n::: \n\n## Import\n\n![](images/01/data-science-cycle-import.png){fig-alt=\"Data science cycle: Import, tidy, transform, visualize, model, communicate. Import is highlighted.\" fig-align=\"center\"}\n\n## Load some packages\n\nMore on what packages are on Thursday, but in a nutshell \"get your tools out of the toolbox\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(scales)    # for better axis labels\nlibrary(tidytext)  # for handling text data\nlibrary(taylor)    # for a surprise!\n```\n:::\n\n\n## Import the data\n\nImport the data called `survey-anonymized.csv` in the folder called `data` using the `read_csv()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <- read_csv(\"data/survey-anonymized.csv\")\n```\n:::\n\n\n\n\n## Take a peek at the data {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 230 Ã— 5\n   stats_experience       programming_experience programming_languages\n   <chr>                  <chr>                  <chr>                \n 1 Yes, I have taken a hâ€¦ A little â€” Iâ€™ve writtâ€¦ \"Java, Python, Yaml,â€¦\n 2 No, I have not taken â€¦ None                    <NA>                \n 3 Yes, I have taken a hâ€¦ A little â€” Iâ€™ve writtâ€¦  <NA>                \n 4 No, I have not taken â€¦ Some â€” Iâ€™ve worked onâ€¦  <NA>                \n 5 No, I have not taken â€¦ Some â€” Iâ€™ve worked onâ€¦  <NA>                \n 6 No, I have not taken â€¦ A little â€” Iâ€™ve writtâ€¦  <NA>                \n 7 Yes, I have taken a hâ€¦ None                   \"Python and java\"    \n 8 No, I have not taken â€¦ None                    <NA>                \n 9 Yes, I have taken a hâ€¦ None                   \"Python- a little biâ€¦\n10 Yes, I have taken a hâ€¦ None                    <NA>                \n# â„¹ 220 more rows\n# â„¹ 2 more variables: learn_best <chr>, data_interests <chr>\n```\n\n\n:::\n:::\n\n\n## Participate ðŸ’»ðŸ“±\n\n::: {.columns}\n::: {.column}\n![](images/wooclap-qr.png)\n:::\n::: {.column}\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). \n\nLog in with your Duke NetID.\n:::\n:::\n\n\n## Take a peek + Participate ðŸ’»ðŸ“± {.xsmall}\n\n::: {.columns}\n::: {.column width=\"70%\"}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 230 Ã— 5\n   stats_experience       programming_experience programming_languages\n   <chr>                  <chr>                  <chr>                \n 1 Yes, I have taken a hâ€¦ A little â€” Iâ€™ve writtâ€¦ \"Java, Python, Yaml,â€¦\n 2 No, I have not taken â€¦ None                    <NA>                \n 3 Yes, I have taken a hâ€¦ A little â€” Iâ€™ve writtâ€¦  <NA>                \n 4 No, I have not taken â€¦ Some â€” Iâ€™ve worked onâ€¦  <NA>                \n 5 No, I have not taken â€¦ Some â€” Iâ€™ve worked onâ€¦  <NA>                \n 6 No, I have not taken â€¦ A little â€” Iâ€™ve writtâ€¦  <NA>                \n 7 Yes, I have taken a hâ€¦ None                   \"Python and java\"    \n 8 No, I have not taken â€¦ None                    <NA>                \n 9 Yes, I have taken a hâ€¦ None                   \"Python- a little biâ€¦\n10 Yes, I have taken a hâ€¦ None                    <NA>                \n# â„¹ 220 more rows\n# â„¹ 2 more variables: learn_best <chr>, data_interests <chr>\n```\n\n\n:::\n:::\n\n:::\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n\n:::\n:::\n\n## Statistics experience\n\nWe asked you the following multiple-choice question where you could only pick one option:\n\n::: demo\nHave you taken any statistics courses before?\n\n- Yes, I have taken another college course on statistics\n- Yes, I have taken a high school statistics course\n- No, I have not taken any statistics courses\n:::\n\n## Visualize\n\nOne way to make sense of data collected via a question like this is to visualize it.\n\n![](images/01/data-science-cycle-visualize.png){fig-alt=\"Data science cycle: Import, tidy, transform, visualize, model, communicate. Visualize is highlighted.\" fig-align=\"center\"}\n\n## Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  count(stats_experience) |>\n  mutate(prop = n / sum(n)) |>\n  ggplot(aes(y = stats_experience, x = prop))+\n  geom_col(show.legend = FALSE) +\n  scale_y_discrete(labels = label_wrap(20)) +\n  scale_x_continuous(labels = percent_format(accuracy = 1), breaks = c(0, 0.25, 0.5)) +\n  labs(\n    title = \"Prior statistics experience among STA 199 students\",\n    y = NULL,\n    x = \"Count\"\n  ) +\n  labs(\n    caption = \"Data are self-reported, collected from STA 199 students on August 25, 2025.\"\n  )\n```\n\n::: {.cell-output-display}\n![](01-hello-world_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n## Programming experience {.smaller}\n\nWe also asked you the following multiple-choice question where you could only pick one option:\n\n::: demo\nHow much experience do you have with programming?\n\n- None\n- A little â€” I've written a few lines or done small exercises\n- Some â€” I've worked on a few projects or used it occasionally\n- A lot â€” I use programming regularly and feel confident writing code\n:::\n\n## Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  count(programming_experience) |>\n  mutate(prop = n / sum(n)) |>\n  ggplot(aes(y = fct_reorder(programming_experience, prop), x = prop, fill = prop))+\n  geom_col(show.legend = FALSE) +\n  scale_y_discrete(labels = label_wrap(25)) +\n  scale_x_continuous(labels = percent_format(accuracy = 1), breaks = c(0, 0.1, 0.2, 0.3, 0.4)) +\n  scale_fill_viridis_c(option = \"E\") +\n  labs(\n    title = \"Prior programming experience among STA 199 students\",\n    y = NULL,\n    x = \"Count\"\n  ) +\n  labs(\n    caption = \"Data are self-reported, collected from STA 199 students on August 25, 2025.\"\n  ) +\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](01-hello-world_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Learn best {.xsmall}\n\nWe also asked you the following multiple-choice question where you could as many options as you liked:\n\n::: demo\nWhat types of data interest you?\n\n- Crime\n- Economics\n- Education\n- Entertainment (e.g., books, movies, music)\n- Environment/Climate\n- Health (e.g., social determinants of health, medical)\n- Politics\n- Sports\n- Other\n- No preference\n:::\n\n## Peek at the data {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  select(data_interests)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 230 Ã— 1\n   data_interests                                                     \n   <chr>                                                              \n 1 \"Economics,Politics\"                                               \n 2 \"Health (e.g.\\\\, social determinants of health\\\\, medical),Politicâ€¦\n 3 \"Crime,Economics,Education,Environment/Climate,Politics,No prefereâ€¦\n 4 \"Crime,Education,Politics,Sports\"                                  \n 5 \"Crime,Education,Entertainment (e.g.\\\\, books\\\\, movies\\\\, music),â€¦\n 6 \"Crime,Entertainment (e.g.\\\\, books\\\\, movies\\\\, music),Health (e.â€¦\n 7 \"Health (e.g.\\\\, social determinants of health\\\\, medical)\"        \n 8 \"Education,Entertainment (e.g.\\\\, books\\\\, movies\\\\, music),Healthâ€¦\n 9 \"Economics,Entertainment (e.g.\\\\, books\\\\, movies\\\\, music),Enviroâ€¦\n10 \"Economics,Environment/Climate,Sports\"                             \n# â„¹ 220 more rows\n```\n\n\n:::\n:::\n\n\n## Tidy  + Transform\n\nBefore we can visualize this variable, we need to tidy and transform it.\n\n![](images/01/data-science-cycle-tidy-transform.png){fig-alt=\"Data science cycle: Import, tidy, transform, visualize, model, communicate. Tidy and transform are highlighted.\" fig-align=\"center\"}\n\n## Tidy + Transform {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  # remove text in parentheses\n  mutate(data_interests = str_remove_all(data_interests, \"\\\\s*\\\\(.*?\\\\)\")) |>\n  # separate into multiple rows for each interest, using comma as delimiter\n  separate_longer_delim(data_interests, delim = \",\") |>\n  count(data_interests, sort = TRUE) |>\n  mutate(prop = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 Ã— 3\n   data_interests          n    prop\n   <chr>               <int>   <dbl>\n 1 Health                142 0.169  \n 2 Sports                111 0.132  \n 3 Politics              110 0.131  \n 4 Entertainment         107 0.128  \n 5 Crime                  97 0.116  \n 6 Economics              93 0.111  \n 7 Education              86 0.103  \n 8 Environment/Climate    76 0.0906 \n 9 Other                  12 0.0143 \n10 No preference           3 0.00358\n11 <NA>                    2 0.00238\n```\n\n\n:::\n:::\n\n\n## Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  mutate(data_interests = str_remove_all(data_interests, \"\\\\s*\\\\(.*?\\\\)\")) |>\n  separate_longer_delim(data_interests, delim = \",\") |>\n  count(data_interests, sort = TRUE) |>\n  mutate(prop = n / sum(n)) |>\n  filter(!is.na(data_interests)) |>\n  ggplot(aes(y = fct_reorder(data_interests, prop), x = prop, fill = prop)) +\n  geom_col(show.legend = FALSE) +\n  scale_y_discrete(labels = label_wrap(20)) +\n  scale_x_continuous(labels = percent_format(accuracy = 1)) +\n  scale_fill_taylor_c(album = \"Speak Now\") +\n  labs(\n    title = \"Data interests among STA 199 students\",\n    y = NULL,\n    x = \"Count\",\n    caption = \"Data are self-reported, collected from STA 199 students on August 25, 2025.\"\n  ) +\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](01-hello-world_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Learn best\n\nWe also asked you the following open-ended question:\n\n::: demo\nHow do you learn best?\n:::\n\n## Tidy + Transform + Summarize {.smaller}\n\nWe can use text mining techniques, like *tokenizing* to words to explore this open-ended question:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  select(learn_best) |>\n  unnest_tokens(word, learn_best) |>\n  anti_join(stop_words, by = \"word\") |>\n  count(word, sort = TRUE) |>\n  filter(n > 15) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 Ã— 2\n   word          n\n   <chr>     <int>\n 1 learn        89\n 2 practice     66\n 3 visual       28\n 4 step         27\n 5 learning     26\n 6 hands        24\n 7 class        22\n 8 questions    21\n 9 examples     19\n10 lecture      17\n11 lectures     17\n12 learner      16\n```\n\n\n:::\n:::\n\n\n## Tidy + Transform + Summarize {.smaller}\n\nWe can also tokenize to *bigrams* (pairs of words):\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsurvey |>\n  select(learn_best) |>\n  tidytext::unnest_tokens(bigrams, learn_best, token = \"ngrams\", n = 2) |>\n  count(bigrams, sort = TRUE) |>\n  filter(n > 10) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 Ã— 2\n   bigrams               n\n   <chr>             <int>\n 1 i learn              73\n 2 learn best           68\n 3 practice problems    28\n 4 hands on             24\n 5 best by              21\n 6 best through         19\n 7 i also               16\n 8 i am                 16\n 9 and then             15\n10 in class             14\n11 when i               14\n12 by step              13\n13 i can                13\n14 step by              13\n15 <NA>                 13\n16 problems and         12\n17 a lot                11\n18 a visual             11\n19 on my                11\n20 visual learner       11\n```\n\n\n:::\n:::\n\n\n## Programming language comfort {.smaller}\n\nWe also asked you the following open-ended question:\n\n::: demo\nIf youâ€™ve programmed before, which languages have you used, and how comfortable do you feel with each? If you havenâ€™t programmed before, please leave this question blank.\n:::\n\n## Take a peek + Participate ðŸ’»ðŸ“± {.smaller}\n\n::: {.columns}\n::: {.column width=\"60%\"}\nAnd the answers are non-trivial to tidy up, e.g.,\n\n```\n- Python - I've used it very little.\n- I have not programmed before.Â \n- Java - very comfortable. Python - pretty comfortable. C/C++ - not super comfortable, haven't used since high school.\n```\n\n:::\n::: {.column width=\"40%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n\n:::\n:::\n\n## Can AI help? {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ellmer)\n\nchat <- chat_openai()\n\nprompts <- survey |>\n  filter(!is.na(programming_languages)) |>\n  pull(programming_languages) |>\n  list()\n\ntype_language <- type_object(\n  language = type_string(),\n  experience = type_string()\n)\n\nlanguage_experience <- parallel_chat_structured(chat, prompts, type = type_language)\nlanguage_experience\n```\n:::\n\n\n```\nlanguage\n1 Python, Java, R, C/C++, JavaScript, HTML/CSS, SQL, C#, VBA, MATLAB, Rust, Assembly, Swift, Stata, Bash, Typescript, Web3 Suite (HTML, CSS, JS), Nextflow, SAS, PsycoPy, Mathematica, React, Vue, Yaml, CourseKata, Flutter, Scratch\n\nexperience\n1 Most students report a range of programming experience, from never having programmed before to being very comfortable in languages such as Python, Java, and R. Many took introductory courses (e.g., CS101, AP CS A) and are comfortable with basic programming constructs. Proficiency is generally highest in Python and Java, though some only have a little experience with languages like R, C/C++, and JavaScript. Quite a few have only used programming languages for specific classes or research projects and may not feel confident after a long break. Some students have experience with more niche or specialized tools such as MATLAB, SAS, and web technologies (HTML, CSS, JavaScript/JS frameworks). Many express a need for a refresher if not used recently. In summary, while a core group is comfortable with at least one language, especially Python or Java, many others have only basic to moderate experience and express the desire to gain more proficiency.\n```\n\n## Can it be trusted 100%? {.xsmall}\n\n**Mathematica** is a software system used for mathematics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |>\n  filter(str_detect(programming_languages, \"Mathematica\")) |>\n  select(programming_languages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  programming_languages                                           \n  <chr>                                                           \n1 Most familiar to least: Java, Mathematica, Python, Matlab, React\n```\n\n\n:::\n:::\n\n\n. . .\n\n**Nextflow** extends the Unix pipes model with a DSL.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |>\n  filter(str_detect(programming_languages, \"Nextflow\"))  |>\n  select(programming_languages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 Ã— 1\n# â„¹ 1 variable: programming_languages <chr>\n```\n\n\n:::\n:::\n\n\n. . .\n\n**PsycoPy** is a desktop application for in-lab studies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |>\n  filter(str_detect(programming_languages, \"PsycoPy\"))  |>\n  select(programming_languages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 Ã— 1\n# â„¹ 1 variable: programming_languages <chr>\n```\n\n\n:::\n:::\n\n\n# Course overview\n\n## Homepage\n\n[https://sta199-f25.github.io](https://sta199-f25.github.io/){.uri}\n\n-   All course materials\n-   Links to Canvas, GitHub, RStudio containers, etc.\n\n## Course toolkit\n\nAll linked from the course website:\n\n-   GitHub organization: [github.com/sta199-f25](https://github.com/sta199-f25)\n-   RStudio containers: [cmgr.oit.duke.edu/containers](https://cmgr.oit.duke.edu/containers)\n-   Communication: Ed Discussion\n-   Assignment submission and feedback: Gradescope\n\n## Activities {.smaller}\n\n-   Introduce new content and prepare for lectures by watching the videos and completing the readings\n-   Attend and actively participate in lectures (and answer questions for participation credit) and labs, office hours, team meetings\n-   Practice applying statistical concepts and computing with application exercises during lecture\n-   Put together what you've learned to analyze real-world data\n    -   Lab assignments\n    -   Homework assignments\n    -   Exams\n    -   Term project completed in teams\n\n## Attendance and participation {.smaller}\n\n-   Daily in lecture\n\n-   Tracked for credit, but not based on correctness, only participation (and often they will be questions designed to make you think that might not have a single right answer!)\n\n## Application exercises {.smaller}\n\n-   Daily-ish in lecture\n\n-   Not graded, but tracked for feedback on workflow\n\n## Labs {.smaller}\n\n-   Hands-on practice with data analysis\n\n-   A sigle exercise per lab, graded based on being there and in something reasonable + correctness\n\n-   Completed in-person, in lab, in teams\n\n-   Teams randomized each week until project teams assigned\n\n-   Developed collaboratively, but turned in individually by the end of the lab session\n\n-   8 throughout semester, two lowest scores dropped\n\n-   No late work accepted\n\n## Homwork {.smaller}\n\n-   Hands-on practice with data analysis\n\n-   Some questions for practice with instant feedback by AI\n\n-   Some questions to be graded by humans for correctness\n\n-   Can start in lab if time permits, but completed at home\n\n-   Can consult with course team and peers, but completed and turned in individually by the end of the week\n\n-   6 throughout semester, lowest score dropped\n\n-   Up to 3 days late (-5% per day), no late work accepted after that\n\n-   One-time late penalty waiver: Can be used on any homework assignment, no questions asked, must be requested from Dr. Knox before the deadline\n\n## Exams {.smaller}\n\n-   Two exams during semester, comprised of two parts:\n\n    -   In-class: 75 minute in-class exam. Closed book, one sheet of notes â€“ 80% of the grade.\n\n    -   Take-home: Follow from the in class exam and focus on the analysis of a dataset introduced in the take home exam â€“ 20% of the grade.\n\n-   Final, in-class only: Closed book, one sheet of notes\n\n- Notes for exams: No larger than 8 1/2 x 11, both sides, **must be prepared by you**\n\n- No extensions or make-ups\n\n::: callout-caution\nExam dates cannot be changed and no make-up exams will be given. If you canâ€™t take the exams on these dates, you should drop this class.\n:::\n\n## Project {.smaller}\n\n-   Dataset of your choice, method of your choice\n\n-   Teamwork\n\n-   Five milestones, interim deadlines throughout semester\n\n-   Final milestone: Presentation in lab and write-up\n\n-   Must be in lab, in-person to present\n\n-   Peer review between teams for content, peer evaluation within teams for contribution\n\n-   Some lab sessions allocated to project progress\n\n::: callout-caution\nProject due date cannot be changed. You must complete the project to pass this class.\n:::\n\n## Teams {.smaller}\n\n-   Randomized at first for weekly labs\n\n-   Then selected by you or assigned by me if you don't express a preference for project and remaining labs\n\n-   Expectations and roles\n    -   Everyone is expected to contribute equal *effort*\n    -   Everyone is expected to understand *all* code turned in\n    -   Individual contribution evaluated by peer evaluation, commits, etc.\n\n-   For the project: Peer evaluation during teamwork and after completion\n\n## Grading {.smaller}\n\n| Category              | Percentage |\n|-----------------------|------------|\n| Lectures (attendance + participation) | 5%         |\n| Labs                  | 8%         |\n| HW                    | 12%         |\n| Project               | 15%        |\n| Exam 1                | 20%        |\n| Exam 2                | 20%        |\n| Final                 | 20%        |\n\nSee course syllabus for how the final letter grade will be determined.\n\n## Participate ðŸ’»ðŸ“±\n\n::: {.columns}\n::: {.column}\n![](images/wooclap-qr.png)\n:::\n::: {.column}\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). \n\nLog in with your Duke NetID.\n:::\n:::\n\n\n# Wrap up\n\n## This week's tasks\n\n-   Complete Lab 0\n    -   Computational setup\n    -   Getting to know you survey\n-   Accept your GitHub organization invitation\n-   Read the syllabus\n-   Complete readings and videos for next class\n",
    "supporting": [
      "01-hello-world_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}