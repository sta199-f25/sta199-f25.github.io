{
  "hash": "61e771a4be01a196f27be12954267c84",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear models with a single predictor\"\nsubtitle: \"Lecture 16\"\ndate: \"2025-10-23\"\nformat: \n  revealjs: \n    output-file: 16-linear-model-single-predictor-slides.html\n    footer: \"[ðŸ”— sta199-f25.github.io](https://sta199-f25.github.io/)\"\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    logo: images/logo.png\n    pdf-separate-fragments: true\n    toc: false\n  html: \n    code-link: true\nfilters: \n  - ../remove-fmt-skip.lua\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Warm-up\n\n## While you wait: Participate ðŸ“±ðŸ’» {.xsmall}\n\n:::::: columns\n:::: {.column width=\"70%\"}\n::: wooclap\nPlay the game a few times and report your score: smallest absolute difference between your guess and the actual correlation, e.g., if the actual correlation was 0.8 and you guessed 0.6, your score would be 0.2. If the actual correlation was -0.4 and you guessed 0.1, your score would be 0.5. \n\n- Option 1 - Calculates your score for you: <https://duke.is/corr-game-1>\n\n- Option 2 - You need to calculate your own score: <https://duke.is/corr-game-2>\n\n:::\n::::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n::::::\n\n## Announcements {.smaller}\n\n-   Peer evaluation 2 due on tonight at 11:59 pm -- see email from TEAMMATES.\n\n-   Make progress on projects -- any questions?\n\n# Midsemester feedback survey\n\n\n\n# Linear regression with a single predictor\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nâ”€â”€ Attaching core tidyverse packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 2.0.0 â”€â”€\nâœ” dplyr     1.1.4          âœ” readr     2.1.5     \nâœ” forcats   1.0.0          âœ” stringr   1.5.1     \nâœ” ggplot2   3.5.2          âœ” tibble    3.3.0.9004\nâœ” lubridate 1.9.4          âœ” tidyr     1.3.1     \nâœ” purrr     1.1.0          \nâ”€â”€ Conflicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€\nâœ– dplyr::filter() masks stats::filter()\nâœ– dplyr::lag()    masks stats::lag()\nâ„¹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nâ”€â”€ Attaching packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidymodels 1.3.0 â”€â”€\nâœ” broom        1.0.9     âœ” rsample      1.3.1\nâœ” dials        1.4.1     âœ” tune         1.3.0\nâœ” infer        1.0.9     âœ” workflows    1.2.0\nâœ” modeldata    1.5.1     âœ” workflowsets 1.1.1\nâœ” parsnip      1.3.2     âœ” yardstick    1.3.2\nâœ” recipes      1.3.1     \nâ”€â”€ Conflicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidymodels_conflicts() â”€â”€\nâœ– scales::discard() masks purrr::discard()\nâœ– dplyr::filter()   masks stats::filter()\nâœ– recipes::fixed()  masks stringr::fixed()\nâœ– dplyr::lag()      masks stats::lag()\nâœ– yardstick::spec() masks readr::spec()\nâœ– recipes::step()   masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(fivethirtyeight)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome larger datasets need to be installed separately, like\nsenators and house_district_forecast. To install these, we\nrecommend you install the fivethirtyeightdata package by\nrunning: install.packages('fivethirtyeightdata', repos =\n'https://fivethirtyeightdata.github.io/drat/', type =\n'source')\n\nAttaching package: 'fivethirtyeight'\n\nThe following object is masked from 'package:modeldata':\n\n    drinks\n```\n\n\n:::\n:::\n\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the dataset as `movie_scores`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores <- fandango |>\n  rename(\n    critics = rottentomatoes,\n    audience = rottentomatoes_user\n  )\n```\n:::\n\n\n## Data overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores |>\n  select(critics, audience)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 146 Ã— 2\n   critics audience\n     <int>    <int>\n 1      74       86\n 2      85       80\n 3      80       90\n 4      18       84\n 5      14       28\n 6      63       62\n 7      42       53\n 8      86       64\n 9      99       82\n10      89       87\n# â„¹ 136 more rows\n```\n\n\n:::\n:::\n\n\n## Data visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(movie_scores, aes(x = critics, y = audience)) +\n  geom_point(alpha = 0.5) +\n  labs(\n    x = \"Critics Score\",\n    y = \"Audience Score\"\n  )\n```\n\n::: {.cell-output-display}\n![](16-linear-model-single-predictor_files/figure-revealjs/scatterplot-1.png){width=960}\n:::\n:::\n\n\n## Regression model {#regression-model-1}\n\nA **regression model** is a function that describes the relationship between the outcome, $Y$, and the predictor, $X$.\n\n$$\n\\begin{aligned} Y &= \\color{black}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{black}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \\end{aligned}\n$$\n\n## Regression model\n\n::::: columns\n::: {.column width=\"30%\"}\n\n$$\n\\begin{aligned} Y &= \\color{#325b74}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{#325b74}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{#325b74}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \n\\end{aligned}\n$$\n\n:::\n\n::: {.column width=\"70%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n:::\n:::::\n\n## Simple linear regression {.smaller}\n\nUse **simple linear regression** to model the relationship between a quantitative outcome ($Y$) and a single quantitative predictor ($X$): $$\\Large{Y = \\beta_0 + \\beta_1 X + \\epsilon}$$\n\n::: incremental\n-   $\\beta_1$: True slope of the relationship between $X$ and $Y$\n-   $\\beta_0$: True intercept of the relationship between $X$ and $Y$\n-   $\\epsilon$: Error (residual)\n:::\n\n## Simple linear regression\n\n$$ \\Large{\\hat{Y} = b_0 + b_1 X} $$\n\n-   $b_1$: Estimated slope of the relationship between $X$ and $Y$\n-   $b_0$: Estimated intercept of the relationship between $X$ and $Y$\n-   No error term!\n\n## Choosing values for $b_1$ and $b_0$\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Residuals\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](16-linear-model-single-predictor_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n$$ \\text{residual} = \\text{observed} - \\text{predicted} = y - \\hat{y} $$\n\n## Least squares line {.smaller}\n\n-   The residual for the $i^{th}$ observation is\n\n$$ e_i = \\text{observed} - \\text{predicted} = y_i - \\hat{y}_i $$\n\n-   The **sum of squared** residuals is\n\n$$ e^2_1 + e^2_2 + \\dots + e^2_n $$\n\n-   The **least squares line** is the one that **minimizes the sum of squared residuals**\n\n## Least squares line\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies_fit <- linear_reg() |>\n  fit(audience ~ critics, data = movie_scores)\n\ntidy(movies_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   32.3      2.34        13.8 4.03e-28\n2 critics        0.519    0.0345      15.0 2.70e-31\n```\n\n\n:::\n:::\n\n\n# Slope and intercept\n\n## Properties of least squares regression\n\n::: incremental\n-   The regression line goes through the center of mass point (the coordinates corresponding to average $X$ and average $Y$): $b_0 = \\bar{Y} - b_1~\\bar{X}$\n\n-   Slope has the same sign as the correlation coefficient: $b_1 = r \\frac{s_Y}{s_X}$\n\n-   Sum of the residuals is zero: $\\sum_{i = 1}^n \\epsilon_i = 0$\n\n-   Residuals and $X$ values are uncorrelated\n:::\n\n## Participate ðŸ“±ðŸ’» {.xsmall}\n\n:::::: columns\n:::: {.column width=\"70%\"}\n\n::: wooclap\nThe slope of the model for predicting audience score from critics score is 0.519.\nWhich of the following is the best interpretation of this value?\n\n$$\\widehat{\\text{audience}} = 32.3 + 0.519 \\times \\text{critics}$$\n\n::: wooclap-choices\n- For every one point increase in the critics score, the audience score goes up by 0.519 points, on average.\n- For every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\n- For every one point increase in the critics score, the audience score goes up by 0.519 points.\n- For every one point increase in the audience score, the critics score goes up by 0.519 points, on average.\n:::\n\n:::\n::::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n::::::\n\n## Participate ðŸ“±ðŸ’» {.xsmall}\n\n:::::: columns\n:::: {.column width=\"70%\"}\n\n::: wooclap\nThe intercept of the model for predicting audience score from critics score is 32.3.\nWhich of the following is the best interpretation of this value?\n\n$$\\widehat{\\text{audience}} = 32.3 + 0.519 \\times \\text{critics}$$\n\n::: wooclap-choices\n- For movies with a critics score of 0 points, we expect the audience score to be 32.3 points, on average.\n- For movies with an audience score of 0 points, we expect the critics score to be 32.3 points, on average.\n- For every one point increase in the critics score, the audience score goes up by 32.3 points.\n- For movies with an audience score of 0 points, we expect the critics score to be 0.519 points, on average.\n:::\n\n:::\n::::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n::::::\n\n## Is the intercept meaningful?\n\nâœ… The intercept is meaningful in context of the data if\n\n-   the predictor can feasibly take values equal to or near zero or\n-   the predictor has values near zero in the observed data\n\n. . .\n\nðŸ›‘ Otherwise, it might not be meaningful!\n\n# Application exercise\n\n## ae\\-13\\-modeling\\-penguins {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-13\\-modeling\\-penguins\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits.\n:::\n\n## Recap\n\n::: task\nCalculate the predicted body weights of penguins on Biscoe, Dream, and Torgersen islands *by hand*.\n:::\n\n$$\n\\widehat{body~mass} = 4716 - 1003 \\times islandDream - 1010 \\times islandTorgersen\n$$\n\n. . .\n\n-   Biscoe: $\\widehat{body~mass} = 4716 - 1003 \\times 0 - 1010 \\times 0 = 4716$\n\n. . .\n\n-   Dream: $\\widehat{body~mass} = 4716 - 1003 \\times 1 - 1010 \\times 0 = 3713$\n\n. . .\n\n-   Torgersen: $\\widehat{body~mass} = 4716 - 1003 \\times 0 - 1010 \\times 1 = 3706$\n\n## Models with categorical predictors\n\n::: incremental\n-   When the categorical predictor has many levels, they're encoded to **dummy variables**.\n\n-   The first level of the categorical variable is the baseline level.\n    In a model with one categorical predictor, the intercept is the predicted value of the outcome for the baseline level (x = 0).\n\n-   Each slope coefficient describes the difference between the predicted value of the outcome for that level of the categorical variable compared to the baseline level.\n:::\n",
    "supporting": [
      "16-linear-model-single-predictor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}