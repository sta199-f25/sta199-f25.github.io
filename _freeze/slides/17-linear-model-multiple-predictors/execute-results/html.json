{
  "hash": "68833f1cf6bace02b7d67f21f9c64b72",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear models with a multiple predictors\"\nsubtitle: \"Lecture 17\"\ndate: \"2025-10-28\"\nformat: \n  revealjs: \n    output-file: 17-linear-model-multiple-predictors-slides.html\n    footer: \"[🔗 sta199-f25.github.io](https://sta199-f25.github.io/)\"\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    logo: images/logo.png\n    pdf-separate-fragments: true\n    toc: false\n  html: \n    code-link: true\nfilters: \n  - ../remove-fmt-skip.lua\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Warm-up\n\n## While you wait: Participate 📱💻 {.xsmall}\n\n:::::: columns\n:::: {.column width=\"70%\"}\n::: wooclap\n\nWhich of the following is true about linear regression models?\n\n::: wooclap-choices\n- The regression line always passes through the origin (x = 0, y = 0).\n- The slope indicates the average change in the outcome for a one-unit increase in the predictor.\n- The intercept indicates the average value of the predictor when the outcome is 0.\n- Least squares regression line minimizes the sum of the vertical distances between the observed and predicted values of the outcome.\n:::\n\n:::\n::::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n::::::\n\n## Announcements {.smaller}\n\n-   ADD ANNOUNCEMENTS\n\n# Linear regression with a categorical predictor\n\n## Packages\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4          ✔ readr     2.1.5     \n✔ forcats   1.0.0          ✔ stringr   1.5.1     \n✔ ggplot2   3.5.2          ✔ tibble    3.3.0.9004\n✔ lubridate 1.9.4          ✔ tidyr     1.3.1     \n✔ purrr     1.1.0          \n── Conflicts ──────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ──────────────────────────── tidymodels 1.3.0 ──\n✔ broom        1.0.9     ✔ rsample      1.3.1\n✔ dials        1.4.1     ✔ tune         1.3.0\n✔ infer        1.0.9     ✔ workflows    1.2.0\n✔ modeldata    1.5.1     ✔ workflowsets 1.1.1\n✔ parsnip      1.3.2     ✔ yardstick    1.3.2\n✔ recipes      1.3.1     \n── Conflicts ─────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'palmerpenguins'\n\nThe following object is masked from 'package:modeldata':\n\n    penguins\n\nThe following objects are masked from 'package:datasets':\n\n    penguins, penguins_raw\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggthemes)\nlibrary(ggbeeswarm)\n```\n:::\n\n\n## From last time (with `penguins`)\n\n::: question\nA different researcher wants to look at body weight of penguins based on the island they were recorded on.\nHow are the variables involved in this analysis different?\n:::\n\n. . .\n\n-   outcome: body weight (numerical)\n\n-   predictor: island (categorical)\n\n## Visualize body weight vs. island {.smaller}\n\n::: question\nDetermine whether each of the following plot types would be an appropriate choice for visualizing the relationship between body weight and island of penguins.\n:::\n\n-   Scatterplot [❌]{.fragment}\n\n-   Box plot [✅]{.fragment}\n\n-   Violin plot [✅]{.fragment}\n\n-   Density plot [✅]{.fragment}\n\n-   Bar plot [❌]{.fragment}\n\n-   Stacked bar plot [❌]{.fragment}\n\n## Boxplot {.smaller}\n\n::: question\nVisualize the relationship between body weight and island of penguins.\nAlso calculate the average body weight per island.\n:::\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  penguins,\n  aes(x = island, y = body_mass_g)\n) +\n  geom_boxplot() +\n  labs(\n    x = \"Island\",\n    y = \"Body mass (g)\",\n    title = \"Body mass by island\"\n  )\n```\n\n::: {.cell-output-display}\n![](17-linear-model-multiple-predictors_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\npenguins |>\n  group_by(island) |>\n  summarize(\n    bm_mean = mean(body_mass_g, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  island    bm_mean\n  <fct>       <dbl>\n1 Biscoe      4716.\n2 Dream       3713.\n3 Torgersen   3706.\n```\n\n\n:::\n:::\n\n\n## Violin plot {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  penguins,\n  aes(x = island, y = body_mass_g)\n) +\n  geom_violin() +\n  labs(\n    x = \"Island\",\n    y = \"Body mass (g)\",\n    title = \"Body mass by island\"\n  )\n```\n\n::: {.cell-output-display}\n![](17-linear-model-multiple-predictors_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## Density plot {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  penguins,\n  aes(x = body_mass_g, color = island, fill = island)\n) +\n  geom_density(alpha = 0.5) +\n  scale_color_colorblind() +\n  scale_fill_colorblind() +\n  labs(\n    x = \"Island\",\n    y = \"Body mass (g)\",\n    title = \"Body mass by island\"\n  )\n```\n\n::: {.cell-output-display}\n![](17-linear-model-multiple-predictors_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Multiple geoms {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  penguins,\n  aes(x = island, y = body_mass_g, color = island)\n) +\n  geom_boxplot() +\n  geom_beeswarm(size = 2, alpha = 0.5) +\n  scale_color_colorblind() +\n  labs(\n    x = \"Island\",\n    y = \"Body mass (g)\",\n    title = \"Body mass by island\"\n  ) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](17-linear-model-multiple-predictors_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Model - fit {.smaller}\n\n::: question\nFit a linear regression model predicting body weight from island and display the results.\nWhy is Biscoe not on the output?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbm_island_fit <- linear_reg() |>\n  fit(body_mass_g ~ island, data = penguins)\n\ntidy(bm_island_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term            estimate std.error statistic   p.value\n  <chr>              <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)        4716.      48.5      97.3 8.93e-250\n2 islandDream       -1003.      74.2     -13.5 1.42e- 33\n3 islandTorgersen   -1010.     100.      -10.1 4.66e- 21\n```\n\n\n:::\n:::\n\n\n## Model - interpret {.smaller}\n\n$$\n\\widehat{body~mass} = 4716 - 1003 \\times islandDream - 1010 \\times islandTorgersen\n$$\n\n-   Intercept: [Penguins from Biscoe island are expected to weigh, on average, 4,716 grams.]{.fragment}\n\n-   Slope - islandDream: [Penguins from Dream island are expected to weigh, on average, 1,003 grams less than those from Biscoe island.]{.fragment}\n\n-   Slope - islandTorgersen: [Penguins from Torgersen island are expected to weigh, on average, 1,010 grams less than those from Biscoe island.]{.fragment}\n\n## Model - predict {.smaller}\n\n::: question\nWhat is the predicted body weight of a penguin on Biscoe island?\nWhat are the estimated body weights of penguins on Dream and Torgersen islands?\nWhere have we seen these values before?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_penguins <- tibble(\n  island = c(\"Biscoe\", \"Dream\", \"Torgersen\")\n)\n\naugment(bm_island_fit, new_data = new_penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  .pred island   \n  <dbl> <chr>    \n1 4716. Biscoe   \n2 3713. Dream    \n3 3706. Torgersen\n```\n\n\n:::\n:::\n\n\n## Model - predict {.smaller}\n\n::: task\nCalculate the predicted body weights of penguins on Biscoe, Dream, and Torgersen islands *by hand*.\n:::\n\n$$\n\\widehat{body~mass} = 4716 - 1003 \\times islandDream - 1010 \\times islandTorgersen\n$$\n\n. . .\n\n-   Biscoe: $\\widehat{body~mass} = 4716 - 1003 \\times 0 - 1010 \\times 0 = 4716$\n\n. . .\n\n-   Dream: $\\widehat{body~mass} = 4716 - 1003 \\times 1 - 1010 \\times 0 = 3713$\n\n. . .\n\n-   Torgersen: $\\widehat{body~mass} = 4716 - 1003 \\times 0 - 1010 \\times 1 = 3706$\n\n## Models with categorical predictors\n\n::: incremental\n-   When the categorical predictor has many levels, they're encoded to **dummy variables**.\n\n-   The first level of the categorical variable is the **baseline level**.\n    In a model with one categorical predictor, the intercept is the predicted value of the outcome for the baseline level (x = 0).\n\n-   Each slope coefficient describes the difference between the predicted value of the outcome for that level of the categorical variable compared to the baseline level.\n:::\n\n## Changing the baseline level\n\n-   By default, R uses the first level of a categorical variable as the baseline level.\n\n-   We can change the baseline level by reordering the levels of the categorical variable.\n\n## Participate 📱💻 {.xsmall}\n\n:::::: columns\n\n:::: {.column width=\"70%\"}\n\n::: wooclap\n\nWhat function goes in the blank to make \"Dream\" the baseline level in the `island` variable?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  mutate(\n    island = ___(island, \"Dream\")\n  )\n```\n:::\n\n\n::: wooclap-choices\n- `level_reorder`\n- `fct_relevel`\n- `fct_reorder`\n- `str_relevel`\n:::\n\n:::\n\n::::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n\n::::::\n\n## Participate 📱💻 {.xsmall}\n\n:::::: columns\n\n:::: {.column width=\"70%\"}\n\n::: wooclap\n\nWhat is the baseline level of `island` in the following model??\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() |>\n  fit(body_mass_g ~ island, data = penguins) |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term         estimate std.error statistic   p.value\n  <chr>           <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)   3706.        87.7   42.3    3.64e-137\n2 islandBiscoe  1010.       100.    10.1    4.66e- 21\n3 islandDream      6.53     104.     0.0627 9.50e-  1\n```\n\n\n:::\n:::\n\n\n::: wooclap-choices\n- Biscoe\n- Dream\n- Torgersen\n- Cannot tell from the output\n:::\n\n:::\n\n::::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n\n::::::\n",
    "supporting": [
      "17-linear-model-multiple-predictors_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}