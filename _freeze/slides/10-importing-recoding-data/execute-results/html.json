{
  "hash": "d17ef39d5a72895d168297925cdfca42",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Importing and recoding data\"\nsubtitle: \"Lecture 10\"\ndate: \"2025-09-25\"\nformat: \n  revealjs: \n    output-file: 10-importing-recoding-data-slides.html\n    footer: \"[ðŸ”— sta199-f25.github.io](https://sta199-f25.github.io/)\"\n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    logo: images/logo.png\n    pdf-separate-fragments: true\n    toc: false\n  html: \n    code-link: true\nfilters: \n  - remove-fmt-skip.lua\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Warm-up\n\n## While you wait: Participate ðŸ“±ðŸ’» {.xsmall}\n\n::: columns\n\n::: {.column width=\"70%\"}\n\n::: wooclap\n\nDid you get my Week 5 nudge email?\n\n::: wooclap-choices\n- Yes, I did! And I don't have any questions.\n- Yes, I did! And I have questions.\n- I haven't checked my email today yet, I will do so after class.\n- What, you email us?!\n:::\n\n:::\n\n:::\n\n::: {.column width=\"30%\"}\n![](images/wooclap-qr.png){width=\"200\" fig-align=\"center\"}\n\n::: small\nScan the QR code or go to [app.wooclap.com/sta199](https://app.wooclap.com/sta199). Log in with your Duke NetID.\n:::\n\n:::\n\n:::\n\n## Announcements\n\n- Week 5 nudges\n\n- Wooclap scores on Gradebook on Canvas\n\n- Start thinking about your project teams:\n  - Teams of 3-4 people _from your lab section_\n  - Fill out the project team form (link on Friday's weekly recap email) or let your TA know of your team preferences by the end of lab on Monday\n  - After that, we'll assign teams for you\n\n# From last time\n\n## Finish up: `ae-08-durham-climate-factors`\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   Open `ae-08-durham-climate-factors.qmd` and pick up at \"Pivot\".\n:::\n\n# Reading data into R\n\n## Reading rectangular data\n\n-   Using [**readr**](https://readr.tidyverse.org/):\n    -   Most commonly: `read_csv()`\n    -   Maybe also: `read_tsv()`, `read_delim()`, etc.\n\n. . .\n\n-   Using [**readxl**](https://readxl.tidyverse.org/): `read_excel()`\n\n. . .\n\n-   Using [**googlesheets4**](https://googlesheets4.tidyverse.org/): `read_sheet()` -- We haven't covered this in the videos, but might be useful for your projects\n\n# Application exercise\n\n## Reading Excel files\n\n-   Read an Excel file, with all its Excel-ness\n\n-   Split it into subsets based on features of the data\n\n-   Write out subsets as CSV files\n\n## Age gap in Hollywood relationships {.smaller}\n\n:::::: columns\n:::: {.column width=\"25%\"}\n::: question\nWhat is the story in this visualization?\n:::\n::::\n\n::: {.column width=\"75%\"}\n![](images/10/hollywood-ages.jpeg){fig-align=\"center\" width=\"600\"}\n:::\n::::::\n\n## ae\\-08\\-age\\-gaps\\-import {.smaller}\n\n::: appex\n-   Go to your ae project in RStudio.\n\n-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.\n\n-   If you haven't yet done so, click Pull to get today's application exercise file: *ae\\-08\\-age\\-gaps\\-import\\.qmd*.\n\n-   Work through the application exercise in class, and render, commit, and push your edits.\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}